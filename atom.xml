<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[rnyz]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://zyq.sexy/"/>
  <updated>2015-10-30T03:19:48.000Z</updated>
  <id>http://zyq.sexy/</id>
  
  <author>
    <name><![CDATA[Gary Host]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[codeVS[1506]-传话]]></title>
    <link href="http://zyq.sexy/2015/10/30/codevs1506/"/>
    <id>http://zyq.sexy/2015/10/30/codevs1506/</id>
    <published>2015-10-30T03:16:54.000Z</published>
    <updated>2015-10-30T03:19:48.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://codevs.cn/problem/1506/" target="_blank" style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;; text-decoration: none;"><span style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;;">Problem : http://codevs.cn/problem/1506/</span></a><br><a id="more"></a></p>
<h2 id="Description">Description</h2><blockquote>
<p>一个朋友网络，如果a认识b，那么如果a第一次收到某个消息，那么会把这个消息传给b，以及所有a认识的人。</p>
<p>如果a认识b，b不一定认识a。</p>
<p>所有人从1到n编号，给出所有“认识”关系，问如果i发布一条新消息，那么会不会经过若干次传话后，这个消息传回给了i，1&lt;=i&lt;=n。</p>
</blockquote>
<h2 id="Input">Input</h2><blockquote>
<p>第一行是n和m，表示人数和认识关系数。</p>
<p>接下来的m行，每行两个数a和b，表示a认识b。1&lt;=a, b&lt;=n。认识关系可能会重复给出，但一行的两个数不会相同。</p>
</blockquote>
<h2 id="Output">Output</h2><blockquote>
<p>一共n行，每行一个字符T或F。第i行如果是T，表示i发出一条新消息会传回给i；如果是F，表示i发出一条新消息不会传回给i。</p>
</blockquote>
<h2 id="Sample_Input">Sample Input</h2><blockquote>
<p>4 6<br>1 2<br>2 3<br>4 1<br>3 1<br>1 3<br>2 3</p>
</blockquote>
<h2 id="Sample_Output">Sample Output</h2><blockquote>
<p>T<br>T<br>T<br>F</p>
</blockquote>
<h2 id="Hint">Hint</h2><blockquote>
<p>n&lt;=1000<br>1&lt;=a, b&lt;=n</p>
</blockquote>
<h2 id="Solution">Solution</h2><p>dfs..</p>
<h2 id="Code">Code</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> rep(i, l, r) for (int i = l; i &lt;= r; i++)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> REP(i, l, r) for (int i = l; i &gt;= r; i--)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> MAXN <span class="number">1010</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>, f = <span class="number">1</span>; <span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&lt;<span class="string">'0'</span> || ch&gt;<span class="string">'9'</span>) &#123;<span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = -<span class="number">1</span>; ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span> &amp;&amp; ch&lt;=<span class="string">'9'</span>) x = x*<span class="number">10</span> + ch - <span class="string">'0'</span>, ch = getchar();</span><br><span class="line">    <span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, first[MAXN], next[MAXN*MAXN], N = -<span class="number">1</span>;</span><br><span class="line"><span class="keyword">struct</span> tlist &#123;<span class="keyword">int</span> x, y;&#125; a[MAXN*MAXN];</span><br><span class="line"><span class="keyword">bool</span> vis[MAXN], xx;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    a[++N].x = x, a[N].y = y, next[N] = first[x], first[x] = N;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> S, <span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    vis[x] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = first[x]; ~i; i = next[i]) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i].y == S) &#123;xx = <span class="number">1</span>; <span class="keyword">return</span>;&#125;</span><br><span class="line">        <span class="keyword">if</span> (xx) <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">if</span> (!vis[a[i].y]) dfs(S, a[i].y);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(first, -<span class="number">1</span>, <span class="keyword">sizeof</span>(first));</span><br><span class="line">    <span class="built_in">memset</span>(next, -<span class="number">1</span>, <span class="keyword">sizeof</span>(next));</span><br><span class="line">    n = read(), m = read(); </span><br><span class="line">    rep(i, <span class="number">1</span>, m) &#123;</span><br><span class="line">        <span class="keyword">int</span> tx = read(), ty = read();</span><br><span class="line">        add(tx, ty);</span><br><span class="line">    &#125;</span><br><span class="line">    rep(i, <span class="number">1</span>, n) &#123;</span><br><span class="line">        xx = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line">        dfs(i, i);</span><br><span class="line">        <span class="built_in">puts</span>(xx ? <span class="string">"T"</span> : <span class="string">"F"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://codevs.cn/problem/1506/" target="_blank" style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;; text-decoration: none;"><span style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;;">Problem : http://codevs.cn/problem/1506/</span></a><br>]]>
    
    </summary>
    
      <category term="codeVS" scheme="http://zyq.sexy/tags/codeVS/"/>
    
      <category term="图遍历" scheme="http://zyq.sexy/categories/%E5%9B%BE%E9%81%8D%E5%8E%86/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[codeVS[1231]-最优布线问题]]></title>
    <link href="http://zyq.sexy/2015/10/30/codevs1231/"/>
    <id>http://zyq.sexy/2015/10/30/codevs1231/</id>
    <published>2015-10-30T00:47:20.000Z</published>
    <updated>2015-10-30T00:49:34.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://codevs.cn/problem/1231/" target="_blank" style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;; text-decoration: none;"><span style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;;">Problem : http://codevs.cn/problem/1231/</span></a><br><a id="more"></a></p>
<h2 id="Description">Description</h2><blockquote>
<p>学校需要将n台计算机连接起来，不同的2台计算机之间的连接费用可能是不同的。为了节省费用，我们考虑采用间接数据传输结束，就是一台计算机可以间接地通过其他计算机实现和另外一台计算机连接。</p>
<p>为了使得任意两台计算机之间都是连通的（不管是直接还是间接的），需要在若干台计算机之间用网线直接连接，现在想使得总的连接费用最省，让你编程计算这个最小的费用。</p>
</blockquote>
<h2 id="Input">Input</h2><blockquote>
<p>输入第一行为两个整数n,m（2&lt;=n&lt;=100000，2&lt;=m&lt;=100000），表示计算机总数，和可以互相建立连接的连接个数。</p>
<p>接下来m行，每行三个整数a,b,c 表示在机器a和机器b之间建立连接的话费是c。(题目保证一定存在可行的连通方案, 数据中可能存在权值不一样的重边，但是保证没有自环)</p>
</blockquote>
<h2 id="Output">Output</h2><blockquote>
<p>输出只有一行一个整数，表示最省的总连接费用。</p>
</blockquote>
<h2 id="Sample_Input">Sample Input</h2><blockquote>
<p>3 3<br>1 2 1<br>1 3 2<br>2 3 1</p>
</blockquote>
<h2 id="Sample_Output">Sample Output</h2><blockquote>
<p>2</p>
</blockquote>
<h2 id="Hint">Hint</h2><blockquote>
<p>最终答案需要用long long类型来保存</p>
</blockquote>
<h2 id="Solution">Solution</h2><p>kruskal</p>
<h2 id="Code">Code</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> rep(i, l, r) for (int i = l; i &lt;= r; i++)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> REP(i, l, r) for (int i = l; i &gt;= r; i--)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> MAXN <span class="number">100010</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> buf[<span class="number">10</span>&lt;&lt;<span class="number">20</span>], *ch;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> k = <span class="number">1</span>, x = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (; !<span class="built_in">isdigit</span>(*ch) &amp;&amp; *ch!=<span class="string">'-'</span>; ch++); </span><br><span class="line">    <span class="keyword">if</span> (*ch != <span class="string">'-'</span>) x = *ch++ - <span class="string">'0'</span>; <span class="keyword">else</span> &#123;k =- <span class="number">1</span>; x = <span class="number">0</span>; ch++;&#125;</span><br><span class="line">    <span class="keyword">for</span> (; <span class="built_in">isdigit</span>(*ch); x = x*<span class="number">10</span> + k*(*ch++ - <span class="string">'0'</span>)); </span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, fa[MAXN];</span><br><span class="line"><span class="keyword">struct</span> tlist &#123;<span class="keyword">int</span> x, y, t;&#125; a[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (fa[x] != x) fa[x] = find(fa[x]);</span><br><span class="line">    <span class="keyword">return</span> fa[x];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(tlist a, tlist b)</span> </span>&#123;<span class="keyword">return</span> a.t &lt; b.t;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    fread(buf, <span class="keyword">sizeof</span>(buf), <span class="keyword">sizeof</span>(<span class="keyword">char</span>), <span class="built_in">stdin</span>); ch = buf;</span><br><span class="line">    n = read(), m = read();</span><br><span class="line">    rep(i, <span class="number">1</span>, n) fa[i] = i;</span><br><span class="line">    rep(i, <span class="number">1</span>, m) a[i].x = read(), a[i].y = read(), a[i].t = read(); </span><br><span class="line">    sort(a+<span class="number">1</span>, a+<span class="number">1</span>+m, cmp);</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>, cnt=<span class="number">0</span>; i&lt;=m &amp;&amp; cnt&lt;n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (find(a[i].x) != find(a[i].y)) fa[find(a[i].x)] = find(a[i].y), cnt++, sum += a[i].t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, sum);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://codevs.cn/problem/1231/" target="_blank" style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;; text-decoration: none;"><span style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;;">Problem : http://codevs.cn/problem/1231/</span></a><br>]]>
    
    </summary>
    
      <category term="codeVS" scheme="http://zyq.sexy/tags/codeVS/"/>
    
      <category term="最小生成树" scheme="http://zyq.sexy/categories/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[FZU[1483]-奖金]]></title>
    <link href="http://zyq.sexy/2015/10/29/fzu1483/"/>
    <id>http://zyq.sexy/2015/10/29/fzu1483/</id>
    <published>2015-10-29T04:23:35.000Z</published>
    <updated>2015-10-29T04:25:27.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://acm.fzu.edu.cn/problem.php?pid=1483" target="_blank" style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;; text-decoration: none;"><span style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;;">Problem : http://acm.fzu.edu.cn/problem.php?pid=1483</span></a><br><a id="more"></a></p>
<h2 id="Description">Description</h2><blockquote>
<p>阿甘开了家公司，为了表示民主，允许每个员工对自己的奖金发表意见。每位员工只能说：“我认为员工a的奖金应该比b高！”公司总裁阿甘决定要找出一种奖金方案，满足各位员工的意见，且同时使得总奖金数最少。每位员工奖金最少为100元。</p>
</blockquote>
<h2 id="Input">Input</h2><blockquote>
<p>本题有多组输入数据，你必须处理到EOF为止<br>每组数据第一行两个整数n,m(0&lt;n&lt;=10000,0&lt;m&lt;=20000)，表示员工总数和意见数；<br>以下m行，每行2个整数a,b，表示某个意见认为第a号员工奖金应该比第b号员工高。</p>
</blockquote>
<h2 id="Output">Output</h2><blockquote>
<p>对于每组数据若无法找到合法方案，则输出Poor Xed, 否则输出一个数表示最少总奖金。</p>
</blockquote>
<h2 id="Sample_Input">Sample Input</h2><blockquote>
<p>2 1<br>1 2</p>
</blockquote>
<h2 id="Sample_Output">Sample Output</h2><blockquote>
<p>201</p>
</blockquote>
<h2 id="Hint">Hint</h2><blockquote>
<p>0&lt;n&lt;=10000,0&lt;m&lt;=20000</p>
</blockquote>
<h2 id="Solution">Solution</h2><p>拓扑排序</p>
<h2 id="Code">Code</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> rep(i, l, r) for (int i = l; i &lt;= r; i++)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> REP(i, l, r) for (int i = l; i &gt;= r; i--)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> MAXN <span class="number">100010</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>, f = <span class="number">1</span>; <span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&lt;<span class="string">'0'</span> || ch&gt;<span class="string">'9'</span>) &#123;<span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = -<span class="number">1</span>; ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span> &amp;&amp; ch&lt;=<span class="string">'9'</span>) x = x*<span class="number">10</span> + ch - <span class="string">'0'</span>, ch = getchar();</span><br><span class="line">    <span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, N = -<span class="number">1</span>, first[MAXN], next[MAXN], fa[MAXN], d[MAXN];</span><br><span class="line"><span class="keyword">bool</span> xed = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">struct</span> tlist &#123;<span class="keyword">int</span> x, y;&#125; a[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    a[++N].x = x, a[N].y = y, next[N] = first[x], first[x] = N;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> S, <span class="keyword">int</span> x, <span class="keyword">int</span> dep)</span> </span>&#123;</span><br><span class="line">    d[x] = max(d[x], dep); </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = first[x]; ~i; i = next[i]) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i].y==S || xed) &#123;xed = <span class="number">1</span>; <span class="keyword">return</span>;&#125;</span><br><span class="line">        dfs(S, a[i].y, dep+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(first, -<span class="number">1</span>, <span class="keyword">sizeof</span>(first));</span><br><span class="line">    <span class="built_in">memset</span>(next, -<span class="number">1</span>, <span class="keyword">sizeof</span>(next));</span><br><span class="line">    <span class="built_in">memset</span>(d, <span class="number">0</span>, <span class="keyword">sizeof</span>(d));</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m) != EOF) &#123;</span><br><span class="line">        xed = <span class="number">0</span>;</span><br><span class="line">        rep(i, <span class="number">1</span>, m) &#123;</span><br><span class="line">            <span class="keyword">int</span> tx = read(), ty = read();</span><br><span class="line">            fa[tx] = ty;</span><br><span class="line">            add(ty, tx);</span><br><span class="line">        &#125;</span><br><span class="line">        rep(i, <span class="number">1</span>, n) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!fa[i] &amp;&amp; !d[i]) dfs(i, i, <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">if</span> (xed) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (xed) &#123;<span class="built_in">puts</span>(<span class="string">"Poor Xed"</span>); <span class="keyword">continue</span>;&#125;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        rep(i, <span class="number">1</span>, n) sum += <span class="number">100</span> + d[i];</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, sum);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://acm.fzu.edu.cn/problem.php?pid=1483" target="_blank" style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;; text-decoration: none;"><span style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;;">Problem : http://acm.fzu.edu.cn/problem.php?pid=1483</span></a><br>]]>
    
    </summary>
    
      <category term="FZU" scheme="http://zyq.sexy/tags/FZU/"/>
    
      <category term="拓扑排序" scheme="http://zyq.sexy/categories/%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[RQNOJ[28]-[Stupid]愚蠢的宠物]]></title>
    <link href="http://zyq.sexy/2015/10/29/rqnoj28/"/>
    <id>http://zyq.sexy/2015/10/29/rqnoj28/</id>
    <published>2015-10-29T02:57:51.000Z</published>
    <updated>2015-10-29T03:00:21.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://www.rqnoj.cn/problem/28" target="_blank" style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;; text-decoration: none;"><span style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;;">Problem : http://www.rqnoj.cn/problem/28</span></a><br><a id="more"></a></p>
<h2 id="Description">Description</h2><blockquote>
<p>大家都知道，sheep有两只可爱的宠物（一只叫神牛，一只叫神菜）。有一天，sheep带着两只宠物到狗狗家时，这两只可爱的宠物竟然迷路了……</p>
<p>狗狗的家因为常常遭到猫猫的攻击，所以不得不把家里前院的路修得非常复杂。狗狗家前院有N个连通的分叉结点，且只有N-1条路连接这N个节点，节点的编号是1-N（1为根节点）。sheep的宠物非常笨，他们只会向前走，不会退后（只向双亲节点走），sheep想知道他们最早什么时候会相遇（即步数最少）。</p>
</blockquote>
<h2 id="Input">Input</h2><blockquote>
<p>第1行：一个正整数N，表示节点个数。<br>第2~N行：两个非负整数A和B，表示A是B的双亲。（保证A,B&lt;=n）<br>第N+1行：两个非负整数A和B，表示两只宠物所在节点的位置。（保证A,B&lt;=n）</p>
</blockquote>
<h2 id="Output">Output</h2><blockquote>
<p>输出他们最早相遇的节点号。</p>
</blockquote>
<h2 id="Sample_Input">Sample Input</h2><blockquote>
<p>10<br>1 2<br>1 3<br>1 4<br>2 5<br>2 6<br>3 7<br>4 8<br>4 9<br>4 10<br>3 6</p>
</blockquote>
<h2 id="Sample_Output">Sample Output</h2><blockquote>
<p>1</p>
</blockquote>
<h2 id="Hint">Hint</h2><blockquote>
<p>N的范围《=1000000</p>
</blockquote>
<h2 id="Solution">Solution</h2><p>记录每个点的father<br>然后顺着往上</p>
<h2 id="Code">Code</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> rep(i, l, r) for (int i = l; i &lt;= r; i++)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> REP(i, l, r) for (int i = l; i &gt;= r; i--)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> MAXN <span class="number">1000010</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>, f = <span class="number">1</span>; <span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&lt;<span class="string">'0'</span> || ch&gt;<span class="string">'9'</span>) &#123;<span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = -<span class="number">1</span>; ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span> &amp;&amp; ch&lt;=<span class="string">'9'</span>) x = x*<span class="number">10</span> + ch - <span class="string">'0'</span>, ch = getchar();</span><br><span class="line">    <span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, fa[MAXN];</span><br><span class="line"><span class="keyword">bool</span> vis[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    fa[<span class="number">1</span>] = -<span class="number">1</span>;</span><br><span class="line">    n = read(); </span><br><span class="line">    rep(i, <span class="number">1</span>, n-<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> tx = read(), ty = read();</span><br><span class="line">        fa[ty] = tx;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line">    <span class="keyword">int</span> x = read(), y = read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = x; ~i; vis[i] = <span class="number">1</span>, i = fa[i]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = y; ~i; i = fa[i]) <span class="keyword">if</span> (vis[i]) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, i);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://www.rqnoj.cn/problem/28" target="_blank" style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;; text-decoration: none;"><span style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;;">Problem : http://www.rqnoj.cn/problem/28</span></a><br>]]>
    
    </summary>
    
      <category term="RQNOJ" scheme="http://zyq.sexy/tags/RQNOJ/"/>
    
      <category term="水题" scheme="http://zyq.sexy/categories/%E6%B0%B4%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[codeVS[1073]-家族]]></title>
    <link href="http://zyq.sexy/2015/10/29/codevs1073/"/>
    <id>http://zyq.sexy/2015/10/29/codevs1073/</id>
    <published>2015-10-29T01:16:01.000Z</published>
    <updated>2015-10-29T01:18:12.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://codevs.cn/problem/1073/" target="_blank" style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;; text-decoration: none;"><span style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;;">Problem : http://codevs.cn/problem/1073/</span></a><br><a id="more"></a></p>
<h2 id="Description">Description</h2><blockquote>
<p>若某个家族人员过于庞大，要判断两个是否是亲戚，确实还很不容易，现在给出某个亲戚关系图，求任意给出的两个人是否具有亲戚关系。 规定：x和y是亲戚，y和z是亲戚，那么x和z也是亲戚。如果x,y是亲戚，那么x的亲戚都是y的亲戚，y的亲戚也都是x的亲戚。</p>
</blockquote>
<h2 id="Input">Input</h2><blockquote>
<p>第一行：三个整数n,m,p，（n&lt;=5000,m&lt;=5000,p&lt;=5000），分别表示有n个人，m个亲戚关系，询问p对亲戚关系。 以下m行：每行两个数Mi，Mj，1&lt;=Mi，Mj&lt;=N，表示Ai和Bi具有亲戚关系。 接下来p行：每行两个数Pi，Pj，询问Pi和Pj是否具有亲戚关系。</p>
</blockquote>
<h2 id="Output">Output</h2><blockquote>
<p>P行，每行一个’Yes’或’No’。表示第i个询问的答案为“具有”或“不具有”亲戚关系。</p>
</blockquote>
<h2 id="Sample_Input">Sample Input</h2><blockquote>
<p>6 5 3<br>1 2<br>1 5<br>3 4<br>5 2<br>1 3<br>1 4<br>2 3<br>5 6</p>
</blockquote>
<h2 id="Sample_Output">Sample Output</h2><blockquote>
<p>Yes<br>Yes<br>No</p>
</blockquote>
<h2 id="Hint">Hint</h2><blockquote>
<p>n&lt;=5000,m&lt;=5000,p&lt;=5000</p>
</blockquote>
<h2 id="Solution">Solution</h2><p>并查集</p>
<h2 id="Code">Code</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> rep(i, l, r) for (int i = l; i &lt;= r; i++)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> REP(i, l, r) for (int i = l; i &gt;= r; i--)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> MAXN <span class="number">10010</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>, f = <span class="number">1</span>; <span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&lt;<span class="string">'0'</span> || ch&gt;<span class="string">'9'</span>) &#123;<span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = -<span class="number">1</span>; ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span> &amp;&amp; ch&lt;=<span class="string">'9'</span>) x = x*<span class="number">10</span> + ch - <span class="string">'0'</span>, ch = getchar();</span><br><span class="line">    <span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, fa[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> fa[x]!=x ? find(fa[x]) : fa[x];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    n = read(), m = read(); <span class="keyword">int</span> T_T = read();    </span><br><span class="line">    rep(i, <span class="number">1</span>, n) fa[i] = i;</span><br><span class="line">    rep(i, <span class="number">1</span>, m) &#123;</span><br><span class="line">        <span class="keyword">int</span> tx = read(), ty = read();</span><br><span class="line">        <span class="keyword">if</span> (find(tx) != find(ty)) fa[find(tx)] = find(ty); </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (T_T--) &#123;</span><br><span class="line">        <span class="keyword">int</span> tx = read(), ty = read();</span><br><span class="line">        <span class="built_in">puts</span>(find(tx)==find(ty) ? <span class="string">"Yes"</span> : <span class="string">"No"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://codevs.cn/problem/1073/" target="_blank" style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;; text-decoration: none;"><span style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;;">Problem : http://codevs.cn/problem/1073/</span></a><br>]]>
    
    </summary>
    
      <category term="codeVS" scheme="http://zyq.sexy/tags/codeVS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[HUSTOJ[1301]-竹子战争]]></title>
    <link href="http://zyq.sexy/2015/10/28/hustoj1301/"/>
    <id>http://zyq.sexy/2015/10/28/hustoj1301/</id>
    <published>2015-10-28T14:15:16.000Z</published>
    <updated>2015-10-28T14:26:02.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://218.5.5.242:9018/JudgeOnline/problem.php?id=1301" target="_blank" style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;; text-decoration: none;"><span style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;;">Problem : http://218.5.5.242:9018/JudgeOnline/problem.php?id=1301</span></a><br><a id="more"></a></p>
<h2 id="Description">Description</h2><blockquote>
<p>话说茅山道士散功重修已足足九九八十一天，这天子时，月上中天，道观前清辉点点。只听得訇然一声，闭关之处整个炸裂开来，烟雾散尽后，只见茅山道士纤尘不染地立于瓦砾之中，抬头望月，面上一片悲悯之色，喃喃道：“孽缘啊……”</p>
<p>果不其然，一名黑衣剑客从旁窜出，剑尖遥遥指向茅山道士，大喝道：“茅山妖道，我已在此等你多时，多年来的恩恩怨怨，就此了断吧！”言不及毕，左手捏了一个剑诀，便欺身上前，直攻茅山下盘。茅山道士看着黑衣剑客有些稚嫩的剑法，眼中掠过复杂的神色：“不如我们换个地方吧，你若能追得上我，我再和你大战一场！”说完向后纵身一跃，就此隐入竹林之中不知所踪。</p>
<p>黑衣剑客知道茅山是个念旧的人，这次必然是要到竹林中的一处隐秘所在。但黑衣剑客的轻功并不高明，每次只能从一棵竹子顶端跳到水平距离不超过R，高度差不超过D的另一棵竹子顶端，所花的时间为两个顶点间的直线距离除以V。你能帮助黑衣剑客以最快的速度追上茅山道士么？</p>
</blockquote>
<h2 id="Input">Input</h2><blockquote>
<p>第一行是四个整数N、R、D、V，表示竹子的数目、最大水平跳跃距离、最大竖直跳跃距离以及黑衣剑客飞行的速度。<br>接下来N行每行三个整数X、Y、H，表示每棵竹子的坐标及高度，高度大于0。<br>你可以假定起点在1，终点在N。<br>同一坐标可能有不同竹子。</p>
</blockquote>
<h2 id="Output">Output</h2><blockquote>
<p>输出文件只有一行，为从1到N的最短时间。保留小数点后三位输出。<br>如果无法到达终点则输出”No Solution”。</p>
</blockquote>
<h2 id="Sample_Input">Sample Input</h2><blockquote>
<p>3 3 4 4<br>0 0 1<br>0 3 5<br>3 3 1</p>
</blockquote>
<h2 id="Sample_Output">Sample Output</h2><blockquote>
<p>2.500</p>
</blockquote>
<h2 id="Hint">Hint</h2><blockquote>
<p>对于40%的数据 0 &lt; N &lt;= 20, 0 &lt;= X, Y &lt;= 20<br>对于100%的数据 0 &lt; N &lt;= 1000, 0 &lt;= X, Y &lt;= 1000, V &gt; 0</p>
</blockquote>
<h2 id="Solution">Solution</h2><p>暴力建图..<br>然后dijkstra</p>
<h2 id="Code">Code</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> rep(i, l, r) for (int i = l; i &lt;= r; i++)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> REP(i, l, r) for (int i = l; i &gt;= r; i--)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> EPS (<span class="number">1e-8</span>)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> MAXN <span class="number">1010</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>, f = <span class="number">1</span>; <span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&lt;<span class="string">'0'</span> || ch&gt;<span class="string">'9'</span>) &#123;<span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = -<span class="number">1</span>; ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span> &amp;&amp; ch&lt;=<span class="string">'9'</span>) x = x*<span class="number">10</span> + ch - <span class="string">'0'</span>, ch = getchar();</span><br><span class="line">    <span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, R, D, V, N = -<span class="number">1</span>, first[MAXN], nxt[MAXN];</span><br><span class="line"><span class="keyword">struct</span> tlist &#123;<span class="keyword">int</span> x, y; <span class="keyword">double</span> t;&#125; a[MAXN];</span><br><span class="line"><span class="keyword">struct</span> rd &#123;<span class="keyword">int</span> x, y, h;&#125; g[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">double</span> t)</span> </span>&#123;</span><br><span class="line">    a[++N].x = x, a[N].y = y, a[N].t = t, nxt[N] = first[x], first[x] = N;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">sqr</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;<span class="keyword">return</span> n*n;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">getdist</span><span class="params">(rd A, rd B)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">double</span> l = <span class="built_in">sqrt</span>(sqr(A.x-B.x) + sqr(A.y-B.y)), h = <span class="built_in">fabs</span>(A.h-B.h);</span><br><span class="line">    <span class="keyword">if</span> ((l-R)&gt;EPS || (h-D)&gt;EPS) <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> (<span class="built_in">sqrt</span>(sqr(A.x-B.x) + sqr(A.y-B.y) + sqr(A.h-B.h)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">priority_queue&lt;pair&lt;<span class="keyword">double</span>, <span class="keyword">int</span>&gt;, <span class="built_in">vector</span>&lt;pair&lt;<span class="keyword">double</span>, <span class="keyword">int</span>&gt; &gt;, greater&lt;pair&lt;<span class="keyword">double</span>, <span class="keyword">int</span>&gt; &gt; &gt; q;</span><br><span class="line"><span class="keyword">bool</span> vis[MAXN];</span><br><span class="line"><span class="keyword">double</span> dis[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">dijkstra</span><span class="params">(<span class="keyword">int</span> S, <span class="keyword">int</span> T)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (!q.empty()) q.pop();</span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line">    <span class="built_in">memset</span>(dis, <span class="number">0x7f</span>, <span class="keyword">sizeof</span>(dis));</span><br><span class="line">    dis[S] = <span class="number">0</span>;</span><br><span class="line">    q.push(make_pair(<span class="number">0</span>, S));    </span><br><span class="line">    <span class="keyword">while</span> (!q.empty()) &#123;</span><br><span class="line">        <span class="keyword">int</span> now = q.top().second; q.pop();</span><br><span class="line">        <span class="keyword">if</span> (vis[now]) <span class="keyword">continue</span>; vis[now] = <span class="number">1</span>; </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = first[now]; ~i; i = nxt[i])</span><br><span class="line">            <span class="keyword">if</span> (dis[now] + a[i].t &lt; dis[a[i].y]) &#123;</span><br><span class="line">                dis[a[i].y] = dis[now] + a[i].t;</span><br><span class="line">                q.push(make_pair(dis[a[i].y], a[i].y));</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dis[T];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(nxt, -<span class="number">1</span>, <span class="keyword">sizeof</span>(nxt));</span><br><span class="line">    <span class="built_in">memset</span>(first, -<span class="number">1</span>, <span class="keyword">sizeof</span>(first));</span><br><span class="line">    n = read(), R = read(), D = read(), V = read();    </span><br><span class="line">    rep(i, <span class="number">1</span>, n) g[i].x = read(), g[i].y = read(), g[i].h = read();</span><br><span class="line">    rep(i, <span class="number">1</span>, n) rep(j, <span class="number">1</span>, i-<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i == j) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">double</span> t = getdist(g[i], g[j]);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">fabs</span>(t+<span class="number">1</span>)&gt;EPS) add(i, j, t), add(j, i, t);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">double</span> ans = dijkstra(<span class="number">1</span>, n);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">fabs</span>(ans-dis[MAXN-<span class="number">1</span>])&lt;EPS) <span class="built_in">puts</span>(<span class="string">"No Solution"</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%.3f\n"</span>, ans/(V*<span class="number">1.0</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://218.5.5.242:9018/JudgeOnline/problem.php?id=1301" target="_blank" style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;; text-decoration: none;"><span style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;;">Problem : http://218.5.5.242:9018/JudgeOnline/problem.php?id=1301</span></a><br>]]>
    
    </summary>
    
      <category term="HUSTOJ" scheme="http://zyq.sexy/tags/HUSTOJ/"/>
    
      <category term="最短路径" scheme="http://zyq.sexy/categories/%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Codeforces[587C]-Duff in the Army]]></title>
    <link href="http://zyq.sexy/2015/10/26/codeforces-587c/"/>
    <id>http://zyq.sexy/2015/10/26/codeforces-587c/</id>
    <published>2015-10-26T02:23:30.000Z</published>
    <updated>2015-10-28T01:51:36.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://codeforces.com/problemset/problem/587/C" target="_blank" style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;; text-decoration: none;"><span style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;;">Problem : http://codeforces.com/problemset/problem/587/C</span></a><br><a id="more"></a></p>
<h2 id="Description">Description</h2><blockquote>
<p>Recently Duff has been a soldier in the army. Malek is her commander.</p>
<p>Their country, Andarz Gu has n cities (numbered from 1 to n) and n-1 bidirectional roads. Each road connects two different cities. There exist a unique path between any two cities.</p>
<p>There are also m people living in Andarz Gu (numbered from 1 to m). Each person has and ID number. ID number of i-th person is i and he/she lives in city number <span>$c_i$</span><!-- Has MathJax -->. Note that there may be more than one person in a city, also there may be no people living in the city.</p>
</blockquote>
<div style="text-align:center;"><br>    <img src="/images/quote/587C_1.png" alt="587C_1"><br></div>

<blockquote>
<p>Malek loves to order. That’s why he asks Duff to answer to q queries. In each query, he gives her numbers v, u and a.</p>
<p>To answer a query:</p>
<p>Assume there are x people living in the cities lying on the path from city v to city u. Assume these people’s IDs are <span>$p_1$</span><!-- Has MathJax -->, <span>$p_2$</span><!-- Has MathJax -->, …, <span>$p_x$</span><!-- Has MathJax --> in increasing order.</p>
<p>If k = min(x, a), then Duff should tell Malek numbers <span>$k$</span><!-- Has MathJax -->, <span>$p_1$</span><!-- Has MathJax -->, <span>$p_2$</span><!-- Has MathJax -->, …, <span>$p_k$</span><!-- Has MathJax --> in this order. In the other words, Malek wants to know a minimums on that path (or less, if there are less than a people).</p>
<p>Duff is very busy at the moment, so she asked you to help her and answer the queries.</p>
</blockquote>
<h2 id="Input">Input</h2><p>The first line of input contains three integers, n, m and q (1 ≤ n, m, q ≤ <span>$10^5$</span><!-- Has MathJax -->).</p>
<p>The next n - 1 lines contain the roads. Each line contains two integers v and u, endpoints of a road (1 ≤ v, u ≤ n, v ≠ u).</p>
<p>Next line contains m integers <span>$c_1$</span><!-- Has MathJax -->, <span>$c_2$</span><!-- Has MathJax -->, …, <span>$c_m$</span><!-- Has MathJax --> separated by spaces (1 ≤ <span>$c_i$</span><!-- Has MathJax --> ≤ n for each 1 ≤ i ≤ m).</p>
<p>Next q lines contain the queries. Each of them contains three integers, v, u and a (1 ≤ v, u ≤ n and 1 ≤ a ≤ 10).</p>
<h2 id="Output">Output</h2><blockquote>
<p>For each query, print numbers <span>$k$</span><!-- Has MathJax -->, <span>$p_1$</span><!-- Has MathJax -->, <span>$p_2$</span><!-- Has MathJax -->, …, <span>$p_k$</span><!-- Has MathJax --> separated by spaces in one line.</p>
</blockquote>
<h2 id="Sample_Input">Sample Input</h2><blockquote>
<p>5 4 5<br>1 3<br>1 2<br>1 4<br>4 5<br>2 1 4 3<br>4 5 6<br>1 5 2<br>5 5 10<br>2 3 3<br>5 3 1</p>
</blockquote>
<h2 id="Sample_Output">Sample Output</h2><blockquote>
<p>1 3<br>2 2 3<br>0<br>3 1 2 4<br>1 2</p>
</blockquote>
<h2 id="Hint">Hint</h2><blockquote>
<p>Graph of Andarz Gu in the sample case is as follows (ID of people in each city are written next to them):</p>
</blockquote>
<div style="text-align:center;"><br>    <img src="/images/quote/587C_2.png" alt="587C_2"><br></div>

<h2 id="Trans">Trans</h2><p>给定一棵树<br>每个点上有一些人<br>询问从u到v, 标号最小的a个人</p>
<h2 id="Solution">Solution</h2><p>像求LCA倍增那样<br>预处理之后, 统计i到i的<span>$2^j$</span><!-- Has MathJax -->祖先的前a个点</p>
<h2 id="Code">Code</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> rep(i, l, r) for (int i = l; i &lt;= r; i++)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> REP(i, l, r) for (int i = l; i &gt;= r; i--)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> LEN(a) (int(a.size()))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> MAXN <span class="number">100010</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>, f = <span class="number">1</span>; <span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&lt;<span class="string">'0'</span> || ch&gt;<span class="string">'9'</span>) &#123;<span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = -<span class="number">1</span>; ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span> &amp;&amp; ch&lt;=<span class="string">'9'</span>) x = x*<span class="number">10</span> + ch - <span class="string">'0'</span>, ch = getchar();</span><br><span class="line">    <span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, first[MAXN], next[MAXN], fa[MAXN][<span class="number">30</span>], dep[MAXN], length, N = -<span class="number">1</span>, root;</span><br><span class="line"><span class="keyword">struct</span> tlist &#123;<span class="keyword">int</span> x, y;&#125; a[MAXN];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; p[MAXN], f[MAXN][<span class="number">30</span>];</span><br><span class="line"><span class="keyword">bool</span> vis[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    a[++N].x = x, a[N].y = y, next[N] = first[x], first[x] = N;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> d)</span> </span>&#123;</span><br><span class="line">    vis[x] = <span class="number">1</span>;</span><br><span class="line">    dep[x] = d;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = first[x]; ~i; i = next[i])</span><br><span class="line">        <span class="keyword">if</span> (!vis[a[i].y])</span><br><span class="line">            fa[a[i].y][<span class="number">0</span>] = x, dfs(a[i].y, d+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; unionv(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; a, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; b, <span class="keyword">int</span> length) &#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; ans; ans.clear();</span><br><span class="line">    rep(i, <span class="number">0</span>, LEN(a)-<span class="number">1</span>) ans.push_back(a[i]);</span><br><span class="line">    rep(i, <span class="number">0</span>, LEN(b)-<span class="number">1</span>) ans.push_back(b[i]);</span><br><span class="line">    sort(ans.begin(), ans.end());</span><br><span class="line">    <span class="keyword">if</span> (LEN(ans) &gt; length)</span><br><span class="line">        ans.resize(length);</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">lca_init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    rep(j, <span class="number">1</span>, <span class="number">17</span>)</span><br><span class="line">        rep(i, <span class="number">1</span>, n)</span><br><span class="line">            fa[i][j] = fa[fa[i][j-<span class="number">1</span>]][j-<span class="number">1</span>];</span><br><span class="line">    rep(i, <span class="number">1</span>, n)</span><br><span class="line">        <span class="keyword">if</span> (i != root)</span><br><span class="line">            f[i][<span class="number">0</span>] = p[fa[i][<span class="number">0</span>]];</span><br><span class="line">    rep(j, <span class="number">1</span>, <span class="number">17</span>)</span><br><span class="line">        rep(i, <span class="number">1</span>, n)</span><br><span class="line">            f[i][j] = unionv(f[i][j-<span class="number">1</span>], f[fa[i][j-<span class="number">1</span>]][j-<span class="number">1</span>], length);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(first, -<span class="number">1</span>, <span class="keyword">sizeof</span>(first));</span><br><span class="line">    <span class="built_in">memset</span>(next, -<span class="number">1</span>, <span class="keyword">sizeof</span>(next));</span><br><span class="line">    <span class="built_in">memset</span>(fa, <span class="number">0</span>, <span class="keyword">sizeof</span>(fa));</span><br><span class="line">    n = read(), m = read(); <span class="keyword">int</span> T_T = read();</span><br><span class="line">    rep(i, <span class="number">1</span>, n-<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> tx = read(), ty = read();</span><br><span class="line">        add(tx, ty), add(ty, tx);</span><br><span class="line">        fa[ty][<span class="number">0</span>] = tx;</span><br><span class="line">        <span class="keyword">if</span> (!fa[tx][<span class="number">0</span>]) root = tx;</span><br><span class="line">    &#125;</span><br><span class="line">    rep(i, <span class="number">1</span>, m) &#123;</span><br><span class="line">        <span class="keyword">int</span> t = read();</span><br><span class="line">        p[t].push_back(i);</span><br><span class="line">    &#125;</span><br><span class="line">    length = <span class="number">10</span>;</span><br><span class="line">    dfs(root, <span class="number">0</span>);</span><br><span class="line">    lca_init();</span><br><span class="line">    <span class="keyword">while</span> (T_T--) &#123;</span><br><span class="line">        <span class="keyword">int</span> tx = read(), ty = read(), xx = read();</span><br><span class="line">        <span class="keyword">if</span> (dep[tx] &lt; dep[ty]) swap(tx, ty);</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v1 = p[tx], v2 = p[ty];</span><br><span class="line">        <span class="keyword">int</span> delta = dep[tx] - dep[ty];</span><br><span class="line">        rep(i, <span class="number">0</span>, <span class="number">17</span>)</span><br><span class="line">            <span class="keyword">if</span> ((<span class="number">1</span>&lt;&lt;i) &amp; delta) &#123;</span><br><span class="line">                v1 = unionv(v1, f[tx][i], xx);</span><br><span class="line">                tx = fa[tx][i]; </span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">if</span> (tx == ty) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d"</span>, min(xx, LEN(v1)));</span><br><span class="line">            rep(i, <span class="number">0</span>, min(xx-<span class="number">1</span>, LEN(v1)-<span class="number">1</span>)) <span class="built_in">printf</span>(<span class="string">" %d"</span>, v1[i]);</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        REP(i, <span class="number">17</span>, <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">if</span> (fa[tx][i] != fa[ty][i]) &#123;</span><br><span class="line">                v1 = unionv(v1, f[tx][i], xx);</span><br><span class="line">                v2 = unionv(v2, f[ty][i], xx);</span><br><span class="line">                tx = fa[tx][i], ty = fa[ty][i];</span><br><span class="line">            &#125;</span><br><span class="line">        v1 = unionv(v1, v2, xx);</span><br><span class="line">        v1 = unionv(v1, p[fa[tx][<span class="number">0</span>]], xx);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>, min(xx, LEN(v1)));</span><br><span class="line">        rep(i, <span class="number">0</span>, min(xx-<span class="number">1</span>, LEN(v1)-<span class="number">1</span>)) <span class="built_in">printf</span>(<span class="string">" %d"</span>, v1[i]);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://codeforces.com/problemset/problem/587/C" target="_blank" style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;; text-decoration: none;"><span style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;;">Problem : http://codeforces.com/problemset/problem/587/C</span></a><br>]]>
    
    </summary>
    
      <category term="Codeforces" scheme="http://zyq.sexy/tags/Codeforces/"/>
    
      <category term="Codeforces-Round-#326-(Div.1)" scheme="http://zyq.sexy/tags/Codeforces-Round-326-Div-1/"/>
    
      <category term="倍增" scheme="http://zyq.sexy/categories/%E5%80%8D%E5%A2%9E/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[POJ[1330]-Nearest Common Ancestors]]></title>
    <link href="http://zyq.sexy/2015/10/22/poj-1330/"/>
    <id>http://zyq.sexy/2015/10/22/poj-1330/</id>
    <published>2015-10-22T15:04:57.000Z</published>
    <updated>2015-10-22T15:11:52.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://poj.org/problem?id=1330" target="_blank" style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;; text-decoration: none;"><span style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;;">Problem : http://poj.org/problem?id=1330</span></a><br><a id="more"></a></p>
<h2 id="Description">Description</h2><blockquote>
<p>A rooted tree is a well-known data structure in computer science and engineering. An example is shown below: </p>
<p><div style="text-align:center;"><br>    <img src="/images/quote/poj1330_1.jpg" alt="poj1330_1"><br></div><br>In the figure, each node is labeled with an integer from {1, 2,…,16}. Node 8 is the root of the tree. Node x is an ancestor of node y if node x is in the path between the root and node y. For example, node 4 is an ancestor of node 16. Node 10 is also an ancestor of node 16. As a matter of fact, nodes 8, 4, 10, and 16 are the ancestors of node 16. Remember that a node is an ancestor of itself. Nodes 8, 4, 6, and 7 are the ancestors of node 7. A node x is called a common ancestor of two different nodes y and z if node x is an ancestor of node y and an ancestor of node z. Thus, nodes 8 and 4 are the common ancestors of nodes 16 and 7. A node x is called the nearest common ancestor of nodes y and z if x is a common ancestor of y and z and nearest to y and z among their common ancestors. Hence, the nearest common ancestor of nodes 16 and 7 is node 4. Node 4 is nearer to nodes 16 and 7 than node 8 is. </p>
<p>For other examples, the nearest common ancestor of nodes 2 and 3 is node 10, the nearest common ancestor of nodes 6 and 13 is node 8, and the nearest common ancestor of nodes 4 and 12 is node 4. In the last example, if y is an ancestor of z, then the nearest common ancestor of y and z is y. </p>
<p>Write a program that finds the nearest common ancestor of two distinct nodes in a tree. </p>
</blockquote>
<h2 id="Input">Input</h2><blockquote>
<p>The input consists of T test cases. The number of test cases (T) is given in the first line of the input file. Each test case starts with a line containing an integer N , the number of nodes in a tree, 2&lt;=N&lt;=10,000. The nodes are labeled with integers 1, 2,…, N. Each of the next N -1 lines contains a pair of integers that represent an edge –the first integer is the parent node of the second integer. Note that a tree with N nodes has exactly N - 1 edges. The last line of each test case contains two distinct integers whose nearest common ancestor is to be computed.</p>
</blockquote>
<h2 id="Output">Output</h2><blockquote>
<p>Print exactly one line for each test case. The line should contain the integer that is the nearest common ancestor.</p>
</blockquote>
<h2 id="Sample_Input">Sample Input</h2><blockquote>
<p>2<br>16<br>1 14<br>8 5<br>10 16<br>5 9<br>4 6<br>8 4<br>4 10<br>1 13<br>6 15<br>10 11<br>6 7<br>10 2<br>16 3<br>8 1<br>16 12<br>16 7<br>5<br>2 3<br>3 4<br>3 1<br>1 5<br>3 5</p>
</blockquote>
<h2 id="Sample_Output">Sample Output</h2><blockquote>
<p>4<br>3</p>
</blockquote>
<h2 id="Hint">Hint</h2><p>None</p>
<h2 id="Trans">Trans</h2><p>T组数据, 每组数据一颗树, 求LCA.</p>
<h2 id="Solution">Solution</h2><p>突然发现不会写倍增了- -</p>
<h2 id="Code">Code</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> rep(i, l, r) for (int i = l; i &lt;= r; i++)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> REP(i, l, r) for (int i = l; i &gt;= r; i--)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> MAXN <span class="number">10010</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>, f = <span class="number">1</span>; <span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&lt;<span class="string">'0'</span> || ch&gt;<span class="string">'9'</span>) &#123;<span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = -<span class="number">1</span>; ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span> &amp;&amp; ch&lt;=<span class="string">'9'</span>) x = x*<span class="number">10</span> + ch - <span class="string">'0'</span>, ch = getchar();</span><br><span class="line">    <span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, first[MAXN], next[MAXN], N = -<span class="number">1</span>, root, qx, qy, dep[MAXN], f[MAXN][<span class="number">24</span>];</span><br><span class="line"><span class="keyword">bool</span> getroot[MAXN];</span><br><span class="line"><span class="keyword">struct</span> tlist &#123;<span class="keyword">int</span> x, y;&#125; a[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    a[++N].x = x, a[N].y = y, next[N] = first[x], first[x] = N;</span><br><span class="line">    f[y][<span class="number">0</span>] = x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> d)</span> </span>&#123;</span><br><span class="line">    dep[x] = d;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = first[x]; ~i; i = next[i])</span><br><span class="line">        dfs(a[i].y, d+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T_T = read();</span><br><span class="line">    <span class="keyword">while</span> (T_T--) &#123;</span><br><span class="line">        <span class="built_in">memset</span>(first, -<span class="number">1</span>, <span class="keyword">sizeof</span>(first));</span><br><span class="line">        <span class="built_in">memset</span>(next, -<span class="number">1</span>, <span class="keyword">sizeof</span>(next));</span><br><span class="line">        <span class="built_in">memset</span>(f, <span class="number">0</span>, <span class="keyword">sizeof</span>(f));</span><br><span class="line">        <span class="built_in">memset</span>(getroot, <span class="number">0</span>, <span class="keyword">sizeof</span>(getroot));</span><br><span class="line">        N = -<span class="number">1</span>;</span><br><span class="line">        n = read();</span><br><span class="line">        rep(i, <span class="number">1</span>, n-<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span> tx = read(), ty = read();</span><br><span class="line">            <span class="keyword">if</span> (!f[tx][<span class="number">0</span>]) root = tx;</span><br><span class="line">            add(tx, ty);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> tx = read(), ty = read();</span><br><span class="line">        dfs(root, <span class="number">0</span>);</span><br><span class="line">        rep(j, <span class="number">1</span>, <span class="number">19</span>)</span><br><span class="line">            rep(i, <span class="number">1</span>, n)</span><br><span class="line">                f[i][j] = f[f[i][j-<span class="number">1</span>]][j-<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span> (dep[tx] &lt; dep[ty]) swap(tx, ty);</span><br><span class="line">        <span class="keyword">int</span> delta = dep[tx] - dep[ty];</span><br><span class="line">        rep(i, <span class="number">0</span>, <span class="number">19</span>)</span><br><span class="line">            <span class="keyword">if</span> ((<span class="number">1</span>&lt;&lt;i) &amp; delta) tx = f[tx][i];</span><br><span class="line">        <span class="keyword">if</span> (tx == ty) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, tx);</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            REP(i, <span class="number">15</span>, <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (f[tx][i] != f[ty][i]) tx = f[tx][i], ty = f[ty][i];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, f[tx][<span class="number">0</span>]);</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://poj.org/problem?id=1330" target="_blank" style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;; text-decoration: none;"><span style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;;">Problem : http://poj.org/problem?id=1330</span></a><br>]]>
    
    </summary>
    
      <category term="poj" scheme="http://zyq.sexy/tags/poj/"/>
    
      <category term="最近公共祖先" scheme="http://zyq.sexy/categories/%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Codeforces[587B]-Duff in Beach]]></title>
    <link href="http://zyq.sexy/2015/10/21/codeforces-587b/"/>
    <id>http://zyq.sexy/2015/10/21/codeforces-587b/</id>
    <published>2015-10-21T07:24:55.000Z</published>
    <updated>2015-10-21T08:24:51.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://codeforces.com/problemset/problem/587/B" target="_blank" style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;; text-decoration: none;"><span style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;;">Problem : http://codeforces.com/problemset/problem/587/B</span></a><br><a id="more"></a></p>
<h2 id="Description">Description</h2><blockquote>
<p>While Duff was resting in the beach, she accidentally found a strange array <span>$b_0$</span><!-- Has MathJax -->, <span>$b_1$</span><!-- Has MathJax -->, …, <span>$b_l-1$</span><!-- Has MathJax --> consisting of l positive integers. This array was strange because it was extremely long, but there was another (maybe shorter) array, <span>$a_0$</span><!-- Has MathJax -->, …, <span>$a_n-1$</span><!-- Has MathJax --> that b can be build from a with formula: <span>$b_i=a_i~mod~n$</span><!-- Has MathJax --> where a mod b denoted the remainder of dividing a by b.</p>
</blockquote>
<div style="text-align:center;"><br>    <img src="/images/quote/587B_1.png" alt="codeforces587B_1"><br></div>

<blockquote>
<p>Duff is so curious, she wants to know the number of subsequences of b like <span>$b_{i_1}$</span><!-- Has MathJax -->, <span>$b_{i_2}$</span><!-- Has MathJax -->, …, <span>$b_{i_x}$</span><!-- Has MathJax --> (0 ≤ <span>$i_1$</span><!-- Has MathJax --> &lt; <span>$i_2$</span><!-- Has MathJax --> &lt; … &lt; <span>$i_x$</span><!-- Has MathJax --> &lt; <span>$l$</span><!-- Has MathJax -->), such that:</p>
<ul>
<li>1 ≤ x ≤ k</li>
<li>For each 1 ≤ j ≤ x-1, <span>$\lfloor \frac{i_j}{n} \rfloor + 1 = \lfloor \frac{i_{j+1}}{n} \rfloor$</span><!-- Has MathJax --></li>
<li>For each 1 ≤ j ≤ x-1, <span>$b_{i_j}$</span><!-- Has MathJax --> ≤ <span>$b_{i_{j+1}}$</span><!-- Has MathJax -->. i.e this subsequence is non-decreasing.</li>
</ul>
</blockquote>
<h2 id="Input">Input</h2><blockquote>
<p>The first line of input contains three integers, n, l and k (1 ≤ n, k, n × k ≤ <span>$10^6$</span><!-- Has MathJax --> and 1 ≤ l ≤ <span>$10^{18}$</span><!-- Has MathJax -->).</p>
<p>The second line contains n space separated integers, <span>$a_0$</span><!-- Has MathJax -->, <span>$a_1$</span><!-- Has MathJax -->, …, <span>$a_{n-1}$</span><!-- Has MathJax --> (1 ≤ <span>$a_i$</span><!-- Has MathJax --> ≤ <span>$10^9$</span><!-- Has MathJax --> for each 0 ≤ i ≤ n-1).</p>
</blockquote>
<h2 id="Output">Output</h2><blockquote>
<p>Print the answer modulo <span>$1000000007$</span><!-- Has MathJax --> in one line.</p>
</blockquote>
<h2 id="Sample_Input">Sample Input</h2><blockquote>
<p>3 5 3<br>5 9 1</p>
</blockquote>
<h2 id="Sample_Output">Sample Output</h2><blockquote>
<p>10</p>
</blockquote>
<h2 id="Hint">Hint</h2><p>In the first sample case, <span>$b=&lt;5, 9, 1, 5, 9&gt;$</span><!-- Has MathJax -->. So all such sequences are: <span>$&lt;b_0&gt;=&lt;5&gt;$</span><!-- Has MathJax -->, <span>$&lt;b_1&gt;=&lt;9&gt;$</span><!-- Has MathJax -->, <span>$&lt;b_2&gt;=&lt;1&gt;$</span><!-- Has MathJax -->, <span>$&lt;b_3&gt;=&lt;5&gt;$</span><!-- Has MathJax -->, <span>$&lt;b_4&gt;=&lt;9&gt;$</span><!-- Has MathJax -->, <span>$&lt;b_0, b_3&gt;=&lt;5, 5&gt;$</span><!-- Has MathJax -->, <span>$&lt;b_0, b_4&gt;=&lt;5, 9&gt;$</span><!-- Has MathJax -->, <span>$&lt;b_1, b_4&gt;=&lt;9, 9&gt;$</span><!-- Has MathJax -->, <span>$&lt;b_2, b_3&gt;=&lt;1, 5&gt;$</span><!-- Has MathJax --> and <span>$&lt;b_2, b_4&gt;=&lt;1, 9&gt;$</span><!-- Has MathJax -->.</p>
<h2 id="Trans">Trans</h2><p>给你n,l,k，然后就是告诉你b有l长度，其中是由a不停重复得到的<br>然后问你一共有多少个满足条件的序列存在<br>条件如下：</p>
<ol>
<li>这个序列的长度大于等于1，小于等于k</li>
<li>这个序列在每一个块中只能选择一个数，并且都必须选择在连续的块中</li>
<li>这个序列是单调不降的</li>
</ol>
<h2 id="Solution">Solution</h2><p>很简单的题- -因为乘法爆int,WA了一下午.. </p>
<blockquote>
<p>条件は一見ややこしいが、言い換えると以下のとおりである。</p>
<ul>
<li>BはAをL/N回繰り返したものである。(L%N分ちょっとあまるが)</li>
<li>そこから、Aを連続x回分抜き出したものを選ぶ。(約L/N-x+1通り)</li>
<li>そのx回分の繰り返しから、1個ずつ要素を抜き出して順に並べると、その要素が昇順になるようにしたい。  </li>
</ul>
<p><strong> さらに言い換えると、「Aの要素から1個取り出すことをx回行い、順に並べるとそれらが昇順になるようにする」である。</strong></p>
<p>上２つの事は後回しにして、最後の行の内容に関して、Iの長さxについて1≦x≦Kを順に処理して行けば良い。<br>最初にAを座標圧縮しておくと、累積和を使うことで最後の条件を満たす組み合わせができる。<br>各組み合わせに関し（L/N-x+1）を掛けていけば良い。<br>ただしL%Nが非0の場合、一部の要素を末尾にする場合で「Aを連続x回分抜き出したものを選ぶ」の選び方が１ずれるので注意。</p>
</blockquote>
<p>以上内容来自:<a href="http://kmjp.hatenablog.jp/entry/2015/10/17/1030" target="_blank" style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;; text-decoration: none;"><span style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;;">http://kmjp.hatenablog.jp/entry/2015/10/17/1030</span></a></p>
<p>大概的意思就是:<br>类似分块, dp做块与块之间, 最后一个不完整的块暴力<br><span>$dp_{ij}$</span><!-- Has MathJax -->表示长度为<span>$i$</span><!-- Has MathJax -->, 以排序后第<span>$j$</span><!-- Has MathJax -->个数字结尾的方案总数<br>然后乱搞搞  </p>
<ul>
<li><p>注意 *<br>两个int相乘, 比如:  </p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> c = a * b</span><br></pre></td></tr></table></figure>
<p>如果答案会爆int, 一定要写成:</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> c = (<span class="keyword">long</span> <span class="keyword">long</span>)(a) * b</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="Code">Code</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> rep(i, l, r) for (LL i = l; i &lt;= r; i++)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> REP(i, l, r) for (LL i = l; i &gt;= r; i--)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> LEN(a) (LL(a.size()))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> MOD (<span class="number">1000000007L</span>L)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> MAXN int(<span class="number">1e6</span>) + <span class="number">10</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    LL x = <span class="number">0</span>, f = <span class="number">1</span>; <span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&lt;<span class="string">'0'</span> || ch&gt;<span class="string">'9'</span>) &#123;<span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = -<span class="number">1</span>; ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span> &amp;&amp; ch&lt;=<span class="string">'9'</span>) x = x*<span class="number">10</span> + ch - <span class="string">'0'</span>, ch = getchar();</span><br><span class="line">    <span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">LL n, l, k, a[MAXN], len, ans = <span class="number">0</span>;</span><br><span class="line">LL t[MAXN];</span><br><span class="line"><span class="built_in">vector</span>&lt;LL&gt; f[MAXN], sum[MAXN];</span><br><span class="line"><span class="built_in">map</span>&lt;LL, LL&gt; mp;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    n = read(), l = read(), k = read();    </span><br><span class="line">    rep(i, <span class="number">1</span>, n) t[i] = a[i] = read();</span><br><span class="line">    sort(t+<span class="number">1</span>, t+<span class="number">1</span>+n);</span><br><span class="line">    rep(i, <span class="number">1</span>, n) mp[t[i]] = i;</span><br><span class="line">    rep(i, <span class="number">0</span>, k) rep(j, <span class="number">0</span>, n+<span class="number">1</span>) f[i].push_back(<span class="number">0</span>), sum[i].push_back(<span class="number">0</span>);</span><br><span class="line">    rep(i, <span class="number">1</span>, n+<span class="number">1</span>) f[<span class="number">1</span>][i] = <span class="number">1</span>, sum[<span class="number">1</span>][i] = sum[<span class="number">1</span>][i-<span class="number">1</span>] + f[<span class="number">1</span>][i];</span><br><span class="line">    rep(i, <span class="number">2</span>, k)</span><br><span class="line">        rep(j, <span class="number">1</span>, n) &#123;</span><br><span class="line">            LL *pos = upper_bound(t+<span class="number">1</span>, t+<span class="number">1</span>+n, t[j]);</span><br><span class="line">            LL p = pos - t;</span><br><span class="line">            f[i][j] = (sum[i-<span class="number">1</span>][p-<span class="number">1</span>]) % MOD;</span><br><span class="line">            sum[i][j] = (sum[i][j-<span class="number">1</span>] + f[i][j]) % MOD;</span><br><span class="line">        &#125;</span><br><span class="line">    len = l / n;</span><br><span class="line">    rep(i, <span class="number">1</span>, min(len, k)) ans += ((len-i+<span class="number">1</span>) % MOD) * sum[i][n], ans %= MOD;</span><br><span class="line">    rep(i, <span class="number">1</span>, l - len*n) rep(j, <span class="number">1</span>, min(len+<span class="number">1</span>, k)) ans += f[j][mp[a[i]]], ans %= MOD;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://codeforces.com/problemset/problem/587/B" target="_blank" style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;; text-decoration: none;"><span style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;;">Problem : http://codeforces.com/problemset/problem/587/B</span></a><br>]]>
    
    </summary>
    
      <category term="Codeforces" scheme="http://zyq.sexy/tags/Codeforces/"/>
    
      <category term="Codeforces-Round#326-Div1" scheme="http://zyq.sexy/tags/Codeforces-Round-326-Div1/"/>
    
      <category term="动态规划" scheme="http://zyq.sexy/categories/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Codeforces[587A]-duff and Weight Lifting]]></title>
    <link href="http://zyq.sexy/2015/10/19/codeforces-587a/"/>
    <id>http://zyq.sexy/2015/10/19/codeforces-587a/</id>
    <published>2015-10-19T07:52:36.000Z</published>
    <updated>2015-10-21T07:28:45.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://codeforces.com/problemset/problem/587/A" target="_blank" style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;; text-decoration: none;"><span style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;;">Problem : http://codeforces.com/problemset/problem/587/A</span></a><br><a id="more"></a></p>
<h2 id="Description">Description</h2><blockquote>
<p>Recently, Duff has been practicing weight lifting. As a hard practice, Malek gave her a task. He gave her a sequence of weights. Weight of i-th of them is 2wi pounds. In each step, Duff can lift some of the remaining weights and throw them away. She does this until there’s no more weight left. Malek asked her to minimize the number of steps.</p>
</blockquote>
<div style="text-align:center;"><br>        <img src="/images/quote/587A_1.png" alt="codeforces587A_1"><br></div>

<blockquote>
<p>Duff is a competitive programming fan. That’s why in each step, she can only lift and throw away a sequence of weights <span>$2^{a1}$</span><!-- Has MathJax -->, …, <span>$2^{ak}$</span><!-- Has MathJax --> if and only if there exists a non-negative integer <span>$x$</span><!-- Has MathJax --> such that <span>$2^{a1}$</span><!-- Has MathJax --> + <span>$2^{a2}$</span><!-- Has MathJax --> + … + <span>$2^{ak}$</span><!-- Has MathJax --> = <span>$2^x$</span><!-- Has MathJax -->, i. e. the sum of those numbers is a power of two.</p>
<p>Duff is a competitive programming fan, but not a programmer. That’s why she asked for your help. Help her minimize the number of steps. </p>
</blockquote>
<h2 id="Input">Input</h2><blockquote>
<p>The first line of input contains integer n (1 ≤ n ≤ <span>$10^6$</span><!-- Has MathJax -->),the number of weights.</p>
<p>The second line contains n integers w1, …, wn separated by spaces (0 ≤ wi ≤ <span>$10^6$</span><!-- Has MathJax --> for each 1 ≤ i ≤ n), the powers of two forming the weights values.</p>
</blockquote>
<h2 id="Output">Output</h2><blockquote>
<p>Print the minimum number of steps in a single line.</p>
</blockquote>
<h2 id="Sample_Input">Sample Input</h2><blockquote>
<p>5<br>1 1 2 3 3</p>
</blockquote>
<h2 id="Sample_Output">Sample Output</h2><blockquote>
<p>2</p>
</blockquote>
<h2 id="Hint">Hint</h2><blockquote>
<p>In the first sample case: One optimal way would be to throw away the first three in the first step and the rest in the second step. Also, it’s not possible to do it in one step because their sum is not a power of two.</p>
<p>In the second sample case: The only optimal way is to throw away one weight in each step. It’s not possible to do it in less than 4 steps because there’s no subset of weights with more than one weight and sum equal to a power of two.</p>
</blockquote>
<h2 id="Trans">Trans</h2><p>读入n个数, 第i个数为$a_i$表示第i个配重的重量为<span>$2^{a_i}$</span><!-- Has MathJax --><br>每次可以选出任意个配重删掉, 但是要求这k个配重的和是2的非负整数幂次方<br>不要求连续</p>
<h2 id="Solution">Solution</h2><p>对于<span>$a_i$</span><!-- Has MathJax -->来说, 两个<span>$a_i$</span><!-- Has MathJax -->等价于一个<span>$a_{i+1}$</span><!-- Has MathJax --><br>所以只需要开一个hash, 预先统计出<span>$2^i$</span><!-- Has MathJax -->的配重有多少个<br>然后从0到MAXN推<br>如果第i个配重有偶数个, 则清空<span>$a_i$</span><!-- Has MathJax -->, 且<span>$a_{i+1} += a_i/2$</span><!-- Has MathJax --><br>否则<span>$a_i=1$</span><!-- Has MathJax -->, <span>$a_{i+1} += (a_i-1)/2$</span><!-- Has MathJax --><br>最后答案就是hash中奇数(=1)的个数</p>
<h2 id="Code">Code</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> rep(i, l, r) for (int i = l; i &lt;= r; i++)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> REP(i, l, r) for (int i = l; i &gt;= r; i--)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> INF <span class="number">19971228</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> MAXN <span class="number">1001000</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>, f = <span class="number">1</span>; <span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&lt;<span class="string">'0'</span> || ch&gt;<span class="string">'9'</span>) &#123;<span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = -<span class="number">1</span>; ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span> &amp;&amp; ch&lt;=<span class="string">'9'</span>) x = x*<span class="number">10</span> + ch - <span class="string">'0'</span>, ch = getchar();</span><br><span class="line">    <span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, a[MAXN], maxvalue = -INF, minvalue = INF, total = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    n = read();</span><br><span class="line">    rep(i, <span class="number">1</span>, n) &#123;</span><br><span class="line">        <span class="keyword">int</span> t = read();</span><br><span class="line">        maxvalue = max(maxvalue, t);</span><br><span class="line">        minvalue = min(minvalue, t);</span><br><span class="line">        a[t]++;</span><br><span class="line">    &#125;</span><br><span class="line">    rep(i, minvalue, MAXN-<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] &amp; <span class="number">1</span>) &#123;</span><br><span class="line">            total++;</span><br><span class="line">            <span class="keyword">if</span> (a[i]==<span class="number">1</span> &amp;&amp; i&gt;=maxvalue) <span class="keyword">break</span>;</span><br><span class="line">            a[i+<span class="number">1</span>] += (a[i]-<span class="number">1</span>) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> a[i+<span class="number">1</span>] += a[i] &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, total);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://codeforces.com/problemset/problem/587/A" target="_blank" style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;; text-decoration: none;"><span style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;;">Problem : http://codeforces.com/problemset/problem/587/A</span></a><br>]]>
    
    </summary>
    
      <category term="Codeforces" scheme="http://zyq.sexy/tags/Codeforces/"/>
    
      <category term="Codeforces-Round-#326-(Div.1)" scheme="http://zyq.sexy/tags/Codeforces-Round-326-Div-1/"/>
    
      <category term="贪心" scheme="http://zyq.sexy/categories/%E8%B4%AA%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Codeforces[586B]-Laurenty and Shop]]></title>
    <link href="http://zyq.sexy/2015/10/19/codeforces-586b/"/>
    <id>http://zyq.sexy/2015/10/19/codeforces-586b/</id>
    <published>2015-10-19T01:38:07.000Z</published>
    <updated>2015-10-19T10:25:42.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://codeforces.com/problemset/problem/586/B" target="_blank" style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;; text-decoration: none;"><span style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;;">Problem : http://codeforces.com/problemset/problem/586/B</span></a><br><a id="more"></a></p>
<h2 id="Description">Description</h2><blockquote>
<p>A little boy Laurenty has been playing his favourite game Nota for quite a while and is now very hungry. The boy wants to make sausage and cheese sandwiches, but first, he needs to buy a sausage and some cheese.</p>
<p>The town where Laurenty lives in is not large. The houses in it are located in two rows, n houses in each row. Laurenty lives in the very last house of the second row. The only shop in town is placed in the first house of the first row.</p>
<p>The first and second rows are separated with the main avenue of the city. The adjacent houses of one row are separated by streets.</p>
<p>Each crosswalk of a street or an avenue has some traffic lights. In order to cross the street, you need to press a button on the traffic light, wait for a while for the green light and cross the street. Different traffic lights can have different waiting time.</p>
<p>The traffic light on the crosswalk from the j-th house of the i-th row to the (j + 1)-th house of the same row has waiting time equal to <span>$a_{ij}$</span><!-- Has MathJax --> (1 ≤ i ≤ 2, 1 ≤ j ≤ n - 1). For the traffic light on the crossing from the j-th house of one row to the j-th house of another row the waiting time equals <span>$b_j$</span><!-- Has MathJax --> (1 ≤ j ≤ n). The city doesn’t have any other crossings.</p>
<p>The boy wants to get to the store, buy the products and go back. The main avenue of the city is wide enough, so the boy wants to cross it <strong>exactly once</strong> on the way to the store and <strong>exactly once</strong> on the way back home. The boy would get bored if he had to walk the same way again, so he wants the way home to be different from the way to the store in at least one crossing.</p>
</blockquote>
<p><div style="text-align:center;"><br>    <img src="/images/quote/586B_1.png" alt="codeforces586B_1"><br></div></p>
<blockquote>
<p>Help Laurenty determine the minimum total time he needs to wait at the crossroads.</p>
</blockquote>
<h2 id="Input">Input</h2><blockquote>
<p>The first line of the input contains integer n (2 ≤ n ≤ 50) — the number of houses in each row.</p>
<p>Each of the next two lines contains n - 1 space-separated integer — values <span>$a_{ij}$</span><!-- Has MathJax --> (1 ≤ <span>$a_{ij}$</span><!-- Has MathJax --> ≤ 100).</p>
<p>The last line contains n space-separated integers $b_j$ (1 ≤ $b_j$ ≤ 100).</p>
</blockquote>
<h2 id="Output">Output</h2><blockquote>
<p>Print a single integer — the least total time Laurenty needs to wait at the crossroads, given that he crosses the avenue only once both on his way to the store and on his way back home.</p>
</blockquote>
<h2 id="Sample_Input">Sample Input</h2><blockquote>
<p>4<br>1 2 3<br>3 2 1<br>3 2 2 3</p>
</blockquote>
<h2 id="Sample_Output">Sample Output</h2><blockquote>
<p>12</p>
</blockquote>
<h2 id="Hint">Hint</h2><blockquote>
<p>The first sample is shown on the figure above.</p>
<p>In the second sample, Laurenty’s path can look as follows:</p>
<ul>
<li>Laurenty crosses the avenue, the waiting time is 3;</li>
<li>Laurenty uses the second crossing in the first row, the waiting time is 2;</li>
<li>Laurenty uses the first crossing in the first row, the waiting time is 1;</li>
<li>Laurenty uses the first crossing in the first row, the waiting time is 1;</li>
<li>Laurenty crosses the avenue, the waiting time is 1;</li>
<li>Laurenty uses the second crossing in the second row, the waiting time is 3.</li>
</ul>
<p>In total we get that the answer equals 11.<br>In the last sample Laurenty visits all the crossings, so the answer is 4.</p>
</blockquote>
<h2 id="Trans">Trans</h2><p>给定一个城市的分布图<br>有两排房屋, 需要需要从右下起始到坐上再回到右下<br>要求纵向的路两次不能相同<br>求最小总路径长度</p>
<h2 id="Solution">Solution</h2><p>n 50…<br>直接暴力就好了<br>如果n大的话..<br>最小费用最大流?(雾  </p>
<h2 id="Code">Code</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> rep(i, l, r) for (int i = l; i &lt;= r; i++)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> REP(i, l, r) for (int i = l; i &gt;= r; i--)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> INF <span class="number">19971228</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> MAXN <span class="number">1010</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>, f = <span class="number">1</span>; <span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&lt;<span class="string">'0'</span> || ch&gt;<span class="string">'9'</span>) &#123;<span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = -<span class="number">1</span>; ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span> &amp;&amp; ch&lt;=<span class="string">'9'</span>) x = x*<span class="number">10</span> + ch - <span class="string">'0'</span>, ch = getchar();</span><br><span class="line">    <span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, a[MAXN], b[MAXN], suma[MAXN], sumb[MAXN], t[MAXN], ans = INF;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">getans</span><span class="params">(<span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> t[k] + suma[k-<span class="number">1</span>] + sumb[n-<span class="number">1</span>] - sumb[k-<span class="number">1</span>]; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    n = read();</span><br><span class="line">    rep(i, <span class="number">1</span>, n-<span class="number">1</span>) a[i] = read(), suma[i] = suma[i-<span class="number">1</span>] + a[i];</span><br><span class="line">    rep(i, <span class="number">1</span>, n-<span class="number">1</span>) b[i] = read(), sumb[i] = sumb[i-<span class="number">1</span>] + b[i];</span><br><span class="line">    rep(i, <span class="number">1</span>, n) t[i] = read();</span><br><span class="line">    rep(i, <span class="number">1</span>, n) </span><br><span class="line">        rep(j, <span class="number">1</span>, n) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == j) <span class="keyword">continue</span>;</span><br><span class="line">            ans = min(ans, getans(i) + getans(j));</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://codeforces.com/problemset/problem/586/B" target="_blank" style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;; text-decoration: none;"><span style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;;">Problem : http://codeforces.com/problemset/problem/586/B</span></a><br>]]>
    
    </summary>
    
      <category term="Codeforces" scheme="http://zyq.sexy/tags/Codeforces/"/>
    
      <category term="Codeforces-Round-#325-(Div.2)" scheme="http://zyq.sexy/tags/Codeforces-Round-325-Div-2/"/>
    
      <category term="水题" scheme="http://zyq.sexy/categories/%E6%B0%B4%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Codeforces[586A]-Alena's Schedule]]></title>
    <link href="http://zyq.sexy/2015/10/17/codeforces-586a/"/>
    <id>http://zyq.sexy/2015/10/17/codeforces-586a/</id>
    <published>2015-10-17T03:51:57.000Z</published>
    <updated>2015-10-21T08:04:51.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://codeforces.com/problemset/problem/586/A" target="_blank" style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;; text-decoration: none;"><span style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;;">Problem : http://codeforces.com/problemset/problem/586/A</span></a><br><a id="more"></a></p>
<h2 id="Description">Description</h2><blockquote>
<p>Alena has successfully passed the entrance exams to the university and is now looking forward to start studying.</p>
<p>One two-hour lesson at the Russian university is traditionally called a pair, it lasts for two academic hours (an academic hour is equal to 45 minutes).</p>
<p>The University works in such a way that every day it holds exactly n lessons. Depending on the schedule of a particular group of students, on a given day, some pairs may actually contain classes, but some may be empty (such pairs are called breaks).</p>
<p>The official website of the university has already published the schedule for tomorrow for Alena’s group. Thus, for each of the n pairs she knows if there will be a class at that time or not.</p>
<p>Alena’s House is far from the university, so if there are breaks, she doesn’t always go home. Alena has time to go home only if the break consists of at least two free pairs in a row, otherwise she waits for the next pair at the university.</p>
<p>Of course, Alena does not want to be sleepy during pairs, so she will sleep as long as possible, and will only come to the first pair that is presented in her schedule. Similarly, if there are no more pairs, then Alena immediately goes home.</p>
<p>Alena appreciates the time spent at home, so she always goes home when it is possible, and returns to the university only at the beginning of the next pair. Help Alena determine for how many pairs she will stay at the university. Note that during some pairs Alena may be at the university waiting for the upcoming pair.</p>
</blockquote>
<h2 id="Input">Input</h2><blockquote>
<p>The first line of the input contains a positive integer n (1 ≤ n ≤ 100) — the number of lessons at the university.</p>
<p>The second line contains n numbers ai (0 ≤ ai ≤ 1). Number ai equals 0, if Alena doesn’t have the i-th pairs, otherwise it is equal to 1. Numbers a1, a2, …, an are separated by spaces.</p>
</blockquote>
<h2 id="Output">Output</h2><blockquote>
<p>Print a single number — the number of pairs during which Alena stays at the university.</p>
</blockquote>
<h2 id="Sample_Input">Sample Input</h2><blockquote>
<p>5<br>0 1 0 1 1</p>
</blockquote>
<h2 id="Sample_Output">Sample Output</h2><blockquote>
<p>4</p>
</blockquote>
<h2 id="Hint">Hint</h2><blockquote>
<p>In the first sample Alena stays at the university from the second to the fifth pair, inclusive, during the third pair she will be it the university waiting for the next pair.</p>
<p>In the last sample Alena doesn’t have a single pair, so she spends all the time at home.</p>
</blockquote>
<h2 id="Trans">Trans</h2><p>给定长度为n的0/1序列, 表示上课的列表<br>当大于等于连续的两节课都没有安排时, Alena便可以回家, 等到需要上课时返校<br>求在学校的时间</p>
<h2 id="Solution">Solution</h2><p>暴力</p>
<h2 id="Code">Code</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> rep(i, l, r) for (int i = l; i &lt;= r; i++)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> REP(i, l, r) for (int i = l; i &gt;= r; i--)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> MAXN <span class="number">1010</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>, f = <span class="number">1</span>; <span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&lt;<span class="string">'0'</span> || ch&gt;<span class="string">'9'</span>) &#123;<span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = -<span class="number">1</span>; ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span> &amp;&amp; ch&lt;=<span class="string">'9'</span>) x = x*<span class="number">10</span> + ch - <span class="string">'0'</span>, ch = getchar();</span><br><span class="line">    <span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, a[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    n = read();</span><br><span class="line">    rep(i, <span class="number">1</span>, n) a[i] = read();</span><br><span class="line">    rep(i, <span class="number">2</span>, n-<span class="number">1</span>) <span class="keyword">if</span> (!a[i] &amp;&amp; a[i-<span class="number">1</span>] &amp;&amp; a[i+<span class="number">1</span>]) a[i] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    rep(i, <span class="number">1</span>, n) ans += a[i];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://codeforces.com/problemset/problem/586/A" target="_blank" style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;; text-decoration: none;"><span style="color: rgb(91, 165, 230); font-family: &#39;comic sans ms&#39;;">Problem : http://codeforces.com/problemset/problem/586/A</span></a><br>]]>
    
    </summary>
    
      <category term="Codeforces" scheme="http://zyq.sexy/tags/Codeforces/"/>
    
      <category term="Codeforces-Round-#325-(Div.2)" scheme="http://zyq.sexy/tags/Codeforces-Round-325-Div-2/"/>
    
      <category term="水题" scheme="http://zyq.sexy/categories/%E6%B0%B4%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://zyq.sexy/2015/10/17/hello-world/"/>
    <id>http://zyq.sexy/2015/10/17/hello-world/</id>
    <published>2015-10-16T18:18:14.000Z</published>
    <updated>2015-10-16T18:18:14.000Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick_Start">Quick Start</h2><h3 id="Create_a_new_post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io]]>
    </summary>
    
  </entry>
  
</feed>
